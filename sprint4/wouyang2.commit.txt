546655f7 (wouyang2 2022-11-30 23:36:02 -0500 240) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 241) # all the bufferd input checking
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 242) # The inputBuffer 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 243) func checkInput():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 244)       if Input.is_action_just_pressed(self.name + "_Down"):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 245)               inputBuffer = inputBuffer + "2"
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 246)               inputTimerArray.push_back(timer)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 247)       if Input.is_action_just_pressed(self.name + str(fMotion)) and Input.is_action_pressed(self.name + "_Down"):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 248)               inputBuffer = inputBuffer + "3"
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 249)               inputTimerArray.push_back(timer)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 250)       if Input.is_action_just_pressed(self.name + str(bMotion)) and Input.is_action_pressed(self.name + "_Down"):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 251)               inputBuffer = inputBuffer + "1"
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 252)               inputTimerArray.push_back(timer)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 253)       if Input.is_action_just_pressed(self.name + str(fMotion)) and !Input.is_action_just_pressed(self.name + "_Down"):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 254)               inputBuffer = inputBuffer + "6"
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 255)               inputTimerArray.push_back(timer)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 256)       if Input.is_action_just_pressed(self.name + str(bMotion)) and !Input.is_action_just_pressed(self.name + "_Down"):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 257)               inputBuffer = inputBuffer + "4"
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 258)               inputTimerArray.push_back(timer)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 259) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 260)       if inputTimerArray.size() > 0:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 261)               if inputTimerArray[0]+150 < timer:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 262)                       inputTimerArray.pop_front()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 263) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 264) # finds the ammount of buffered inputs inputted after a certin ammount of frames
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 265) func get_buffer_window(var frames):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 266)       for i in inputTimerArray.size():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 267)               if inputTimerArray[i]+frames > timer:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 268)                       return inputTimerArray.size() - i
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 269)       return 0
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 270) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 271) # Checks for if the fire ball should be cast
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 272) func fireball_check():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 273)       if timer > Fireball.buffer:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 274)               if (inputBuffer.findn("236", inputBuffer.length()-get_buffer_window(20)) != -1):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 275)                       print("Fireball Ready")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 276)                       Fireball.buffer = timer+80
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 277) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 278)       if (timer < Fireball.buffer) and Input.is_action_just_pressed(self.name + "_Attack") and (lagTimer == 0):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 279)               Fireball.active = true
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 280)               lagTimer = Fireball.Startup + Fireball.Lag
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 281) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 282) func throw_fireball():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 283)       $fireballAnim/fireballAnimation.play("fire")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 284)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 285)       if lagTimer == Fireball.Startup:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 286)               Fireball.instance = Fireball.scene.instance()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 287)               get_parent().add_child(Fireball.instance)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 288)               Fireball.instance.init(self.position, onLeft(), self, shader.get_shader_param("headBand"))
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 289)               Fireball.instance.position += Vector2(0, 70)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 290)               Fireball.instance.scale = Vector2(.7,.7)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 291) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 292) func Reset_Fireball():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 293)       Fireball.active = false
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 294) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 295) func jab_check(var input):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 296)       if input == null and Input.is_action_just_pressed("%s_Attack" % self.name) and lagTimer == 0:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 297)               $jabBox/AnimationPlayer.play("jab")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 298)               lagTimer = jabEndLag
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 299) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 300) func kick_check():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 301)       if Input.is_action_pressed(self.name + "_Down") and Input.is_action_just_pressed("%s_Attack" % self.name) and lagTimer == 0:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 302)               $kickBox.visible = true
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 303)               $kickBox/kickAnimation.play("kick")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 304)               lagTimer = kickEndLag
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 305)               kickTimer = timer + kickEndLag
485ad40c (wouyang2 2022-11-08 22:38:15 -0500 306)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 307)       if kickTimer < timer:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 308)               $kickBox.visible = false
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 309) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 310) func air_kick_check():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 311)       if Input.is_action_just_pressed(self.name + "_Attack") and lagTimer == 0:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 312)               $Airkick/AnimationPlayer.play("Airkick")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 313) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 314) func reset_air_kick():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 315)       $Airkick/AnimationPlayer.play("RESET")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 316) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 317) func jump_punch_check(input):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 318)       if input == fMotion and Input.is_action_just_pressed(self.name + "_Attack") and lagTimer == 0:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 319)               print("Jump attack")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 320)               return true
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 321)       return false
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 322) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 323) func jump_punch():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 324)       $Jump_punch/AnimationPlayer.play("Jump_punch")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 325)       motion.x = -(JumpPunchvec.x * Delta * flippedMotion)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 326)       motion.y -= JumpPunchvec.y * Delta
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 327)       GravMod = 0.3
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 328)       lagTimer = JumpPunchLag
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 329) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 330) func reset_grav():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 331)       GravMod = 1.0
485ad40c (wouyang2 2022-11-08 22:38:15 -0500 332) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 333) func Uppercut_check():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 334)       if timer > uppercut_buffer:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 335)               if (inputBuffer.findn("623", inputBuffer.length()-get_buffer_window(25)) != -1):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 336)                       print("Uppercut Ready")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 337)                       uppercut_buffer = timer+60
485ad40c (wouyang2 2022-11-08 22:38:15 -0500 338) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 339)       if (timer < uppercut_buffer) and Input.is_action_just_pressed(self.name + "_Attack") and not inUppercut:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 340)               Reset_Fireball()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 341)               inUppercut = true
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 342)               uppercut_timer = timer + UppercutStartup + UppercutLag
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 343)               lagTimer = UppercutStartup + UppercutLag
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 344) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 345) func Uppercut():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 346)       if uppercut_timer == UppercutStartup + UppercutLag + timer:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 347)               $DP/AnimationPlayer.play("Dragon punch")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 348)       if timer < (uppercut_timer - UppercutLag):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 349)               motion.x -= UppercutMotion.x * Delta * flippedMotion
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 350)               motion.y -= UppercutMotion.y * Delta
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 351) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 352) func Reset_Uppercut():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 353)       inUppercut = false
485ad40c (wouyang2 2022-11-08 22:38:15 -0500 354)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 355) func parry_check(var input):
485ad40c (wouyang2 2022-11-08 22:38:15 -0500 356)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 357)       if Input.is_action_just_pressed(self.name + str(fMotion)):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 358)               parrying = true
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 359)               parryTimer = timer
485ad40c (wouyang2 2022-11-08 22:38:15 -0500 360)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 361)       if (timer - parryTimer > parryWindow):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 362)               parrying = false
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 363)               
485ad40c (wouyang2 2022-11-08 22:38:15 -0500 364) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 365) ##########################################################################
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 366) # Blocking check
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 367) # This now works on layers:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 368) # P_layer is the current players low hitboxes (P1 = 1) (P2 = 3) Zero indexed
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 369) # P_layer+8 is the High hitbox
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 370) # P_layer+16 is the mid Hitbox
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 371) # Any number + 1 is the Hurtbox variant
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 372) func block_check(var input):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 373)       var Priority_in = inCheck([fMotion, bMotion])
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 374)       if Priority_in == bMotion and lagTimer == 0:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 375)               $BlockBox/BlockingBox.disabled = false
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 376)               $BlockBox.visible = true
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 377)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 378)               # Turn on blocking shader
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 379)               shadePlayer(blockingColor, 0.6)
485ad40c (wouyang2 2022-11-08 22:38:15 -0500 380)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 381)               get_node("BlockBox").set_collision_layer_bit(P_layer+1+16, 1)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 382)               get_node("HurtBox").set_collision_layer_bit(P_layer+1+16, 0)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 383)               if input == "_Down":
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 384)                       get_node("BlockBox").set_collision_layer_bit(P_layer+1, 1)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 385)                       get_node("BlockBox").set_collision_layer_bit((P_layer+1)+8, 0)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 386)                       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 387)                       get_node("HurtBox").set_collision_layer_bit(P_layer+1, 0)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 388)                       get_node("HurtBox").set_collision_layer_bit((P_layer+1)+8, 1)
485ad40c (wouyang2 2022-11-08 22:38:15 -0500 389)               else:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 390)                       get_node("BlockBox").set_collision_layer_bit(P_layer+1+8, 1)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 391)                       get_node("BlockBox").set_collision_layer_bit((P_layer+1), 0)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 392)                       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 393)                       get_node("HurtBox").set_collision_layer_bit(P_layer+1+8, 0)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 394)                       get_node("HurtBox").set_collision_layer_bit((P_layer+1), 1)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 395)       else:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 396)               reset_block()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 397) func reset_block():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 398)       get_node("HurtBox").set_collision_layer_bit(P_layer+1, 1)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 399)       get_node("HurtBox").set_collision_layer_bit(P_layer+1+8, 1)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 400)       get_node("HurtBox").set_collision_layer_bit(P_layer+1+16, 1)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 401)       $BlockBox.visible = false
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 402)       $BlockBox/BlockingBox.disabled = true
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 403)       $HurtBox/CollisionShape2D.disabled = false
485ad40c (wouyang2 2022-11-08 22:38:15 -0500 404)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 405)       # Turn off blocking shader
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 406)       disableShading()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 407) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 408) func jump_check():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 409)       if Input.is_action_pressed("%s_Jump" % self.name) and ((lagTimer == 0) or jumpCancel):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 410)               return true
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 411)       else:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 412)               return false
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 413) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 414) func jump(var delta):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 415)       motion.y = -jumpMultiplier * delta
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 416)       get_node("PlayerSprite").play("Jump")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 417)       reset_block()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 418)       if not jumpCancel:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 419)               motion.x *= 2.5
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 420)       else:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 421)               motion.x *= 1.2
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 422)               reset_dash()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 423)               reset_block()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 424)       # is_on_floor() is a function that just works ig
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 425)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 426) func apply_Hit_Stun(var HitVec):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 427)       motion = HitVec * Vector2(Delta, Delta)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 428)       motion.x *= flippedMotion
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 429)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 430)       if is_on_floor():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 431)               motion.y *= 1.4
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 432) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 433) func apply_Block_stun(var BlockVec):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 434)       motion = BlockVec * Vector2(Delta, Delta)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 435)       motion.x *= flippedMotion
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 436)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 437) # Called when the node enters the scene tree for the first time.
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 438) func _ready():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 439)       if self.name == "P1":
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 440)               other = "P2"
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 441)               P_layer = 1
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 442)               Global.p1_Health = health
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 443)       else:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 444)               P_layer = 3
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 445)               other = "P1"
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 446)               Global.p2_Health = health
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 447)       fMotion = "move_left"
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 448)       bMotion = "move_right"
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 449)       controler = controler.new()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 450)       moveLeft = controler._get_left(self.name)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 451)       moveRight = controler._get_right(self.name)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 452)       $jabBox/ColorRect.visible = false
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 453)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 454)       #MusicControl.stop()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 455)       MusicControl._paly_battle_music()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 456)       Fireball = fireball.new()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 457)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 458)       # Shader Shenanigans
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 459)       if self.name == "P1" :
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 460)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 461)               print("Setting P1 Shader Params")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 462)               shader.set_shader_param("headBand", Global.p1_headband_color)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 463)               shader.set_shader_param("body", Global.p1_body_color)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 464)               get_parent().get_node("UI/P1_HealthBar/ColorRect").color = Global.p1_headband_color
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 465)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 466) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 467)       if self.name == "P2" :
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 468)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 469)               print("Setting P1 Shader Params")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 470)               shader.set_shader_param("headBand", Global.p2_headband_color)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 471)               shader.set_shader_param("body", Global.p2_body_color)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 472)               get_parent().get_node("UI/P2_HealthBar/ColorRect").color = Global.p2_headband_color
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 473)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 474)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 475) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 476) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 477) func _physics_process(delta):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 478)       Delta = delta
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 479)       # Simple timer varible
485ad40c (wouyang2 2022-11-08 22:38:15 -0500 480)       timer += 1
485ad40c (wouyang2 2022-11-08 22:38:15 -0500 481) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 482)       # Buffered input handling
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 483)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 484)       checkInput()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 485)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 486)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 487)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 488)       var input
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 489)       if lagTimer == 0:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 490)               input = inCheck(["_Down",fMotion, bMotion])
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 491)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 492)               #Checking if the sprite just flipped, make sure that this isn't done while in hitstun
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 493)               if hasFliped():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 494)                       flipPlayer()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 495)                       # For resetting dashing
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 496)       if dashing and dashTimer < timer:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 497)               reset_dash()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 498)       if hitstun < timer and blockstun < timer:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 499)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 500)               if is_on_floor():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 501)                       reset_air_kick()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 502)                       if lagTimer == 0:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 503)                               Reset_Uppercut()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 504)                               Reset_Fireball()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 505)                               reset_grav()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 506)                       #sets the air dashes back to 1 if the player is on the ground
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 507)                       airDashes = 1
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 508)                       # Animation
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 509)                       if lagTimer == 0:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 510)                               AnimationCheck(input)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 511) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 512)                       # Basic Movement
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 513)                       if input != null and lagTimer == 0:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 514)                               applyMotion(input, delta)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 515) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 516)                       # Uppercut
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 517)                       Uppercut_check()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 518)                       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 519)                       if inUppercut:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 520)                               Uppercut()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 521)                               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 522)                       # end of uppercut
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 523) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 524)                       # Fireball
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 525)                       fireball_check()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 526)                       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 527)                       if Fireball.active:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 528)                               throw_fireball()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 529) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 530)                       # end of Fireball
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 531)                       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 532)                       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 533)                       jab_check(input)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 534)                       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 535)                       #kick (badly named, will likely get changed)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 536)                       kick_check()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 537) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 538)                       if jump_punch_check(input):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 539)                               jump_punch()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 540)                       # Blocking (badly named, will likely get changed)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 541)                       block_check(input)
485ad40c (wouyang2 2022-11-08 22:38:15 -0500 542)                       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 543)                       parry_check(input)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 544) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 545)                       # Jumping
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 546)                       if jump_check():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 547)                               jump(delta)
485ad40c (wouyang2 2022-11-08 22:38:15 -0500 548)               else:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 549)                       air_kick_check()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 550)               #dashing
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 551) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 552)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 553)               if lagTimer == 0 and dashTimer < timer and not dashing:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 554)                       #dealing with air dashes
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 555)                       if airDashes != 0:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 556)                               dashCheck()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 557)                               if dashTimer > timer:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 558)                                       airDashes -= 1
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 559)                                       dash(delta)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 560)       #elif timer < hitstun:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 561)       #       applyHitStun(delta)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 562)               #end of dashing
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 563)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 564)               # Control horizontal speed
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 565)       if is_on_floor():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 566)               if timer < blockstun:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 567)                       motion.x *= BlockingFriction
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 568)               elif input == "_Down":
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 569)                       motion.x *= CrouchingFriction
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 570)               else:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 571)                       motion.x *= friction
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 572)               if motion.y > 50:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 573)                       motion.y = 0
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 574)       else:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 575)               motion.y += gravityMultiplier * delta * GravMod
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 576)               motion.x *= airSpeedMultiplier
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 577)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 578)               # Apply all changes in movement
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 579)       motion.y *= airDashMultiplyer
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 580)       move_and_slide(motion, Vector2.UP)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 581)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 582)       # Update lag timer
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 583)       if lagTimer > 0:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 584)               lagTimer -= 1
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 585)               disableShading()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 586)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 587)       if blockstun == timer:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 588)               disableShading()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 589)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 590)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 591)       if (health <= 0) and is_on_floor():
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 592)               print(self.name, " Has lost")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 593)               Global.win_player = self.name
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 594)               get_tree().change_scene("res://Game/WIN.tscn")
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 595) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 596) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 597) # THIS IS WHERE WE WILL HANDLE BEING HIT
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 598) func _on_HurtBox_area_entered(area):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 599)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 600)       # CHECK FOR PARRY
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 601)       if (parrying):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 602)               # PLAY PARRY SFX
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 603)               shadePlayer(parryColor, 0.6)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 604)               area.get_node("hitbox").disabled = true
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 605)               hitstun = timer + parryStun
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 606)               return
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 607)               
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 608)       #PLAY SOUNDEFFECT HERE
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 609)       MusicControl.sf_attack()
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 610)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 611)       # Hitstun
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 612)       hitstun = timer + area.Hitstun
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 613)       apply_Hit_Stun(area.HitstunVec)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 614)       # Damage
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 615)       health -= area.Damage 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 616)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 617)       # Update Health var
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 618)       if self.name == "P1":
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 619)               Global.p1_Health = health
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 620)       else:
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 621)               Global.p2_Health = health
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 622)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 623)       # Update health bar
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 624)       var path = "UI/"+self.name+"_HealthBar"
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 625)       get_parent().get_node(path).updateHealthBar(health/MAX_HEALTH)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 626) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 627)       # Make player turn red
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 628)       shadePlayer(hitColor, 0.6)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 629) 
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 630) func _on_BlockBox_area_entered(area):
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 631)       #MusicControl.block_sound
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 632)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 633)       # Turn on hit block shader
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 634)       shadePlayer(blockedColor, 0.6)
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 635)       
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 636)       # Put player into blockstun
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 637)       blockstun = timer + area.Blockstun
546655f7 (wouyang2 2022-11-30 23:36:02 -0500 638)       apply_Block_stun(area.BlockstunVec)
